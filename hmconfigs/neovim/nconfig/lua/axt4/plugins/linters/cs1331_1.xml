<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="severity" value="error"/>
    <property name="fileExtensions" value="java"/>

    <!-- Miscellaneous -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Regexp -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="message" value="Line has trailing spaces."/>
        <property name="severity" value="error"/>
    </module>

    <!-- Size Violations -->
    <module name="FileLength"/>
    <module name="LineLength">
        <property name="max" value="120"/>
        <property name="severity" value="error"/>
        <property name="ignorePattern" value="^package.*|^import.*|.*@link.*|.*@see.*"/>
    </module>

    <!-- Whitespace -->
    <module name="FileTabCharacter"/>

    <module name="TreeWalker">
        <property name="skipFileOnJavaParseException" value="true"/>

        <!-- Annotations -->
        <module name="AnnotationLocation"/>
        <module name="AnnotationUseStyle"/>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>

        <!-- Blocks Checks -->
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="EmptyBlock">
            <property name="option" value="text"/>
            <property name="tokens" value="LITERAL_WHILE, LITERAL_TRY, LITERAL_FINALLY, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, INSTANCE_INIT, STATIC_INIT, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_CASE, LITERAL_DEFAULT, ARRAY_INIT"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="^(expected|ignored?)\d*$"/>
        </module>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="NeedBraces">
            <property name="tokens" value="LAMBDA"/>
            <property name="allowSingleLineStatement" value="true"/>
            <message key="needBraces" value="''->'' construct must use '''{}'''s or be single-line."/>
        </module>
        <module name="RightCurly"/>

        <!-- Coding -->
        <module name="AvoidDoubleBraceInitialization"/>
        <module name="AvoidNoArgumentSuperConstructorCall"/>
        <module name="CovariantEquals"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="FallThrough"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
        </module>
        <module name="IllegalInstantiation"/>
        <module name="IllegalToken"/>
        <module name="InnerAssignment"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="ParameterAssignment"/>
        <module name="RequireThis"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessaryParentheses"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>
        <module name="UnusedLocalVariable"/>

        <!-- Imports -->
        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport"/>
        <module name="CustomImportOrder">
            <property name="customImportOrderRules"
                value="STATIC, STANDARD_JAVA_PACKAGE, SPECIAL_IMPORTS, THIRD_PARTY_PACKAGE, SAME_PACKAGE(4)"/>
            <property name="specialImportsRegExp" value="^javafx\."/>
            <property name="sortImportsInGroupAlphabetically" value="true"/>
        </module>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Miscellaneous -->
        <module name="ArrayTypeStyle"/>
        <module name="CommentsIndentation"/>
        <module name="Indentation"/>
        <module name="NoCodeInFile"/>
        <module name="OuterTypeFilename"/>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

        <!-- Modifiers -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier">
            <property name="jdkVersion" value="11"/>
        </module>

        <!-- Naming Conventions -->
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="IllegalIdentifierName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="LambdaParameterName"/>
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$|^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
        </module>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="PatternVariableName"/>
        <module name="RecordComponentName"/>
        <module name="RecordTypeParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Size Violations -->
        <module name="MethodLength"/>

        <!-- Whitespace -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="AT, INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, ARRAY_DECLARATOR, INDEX_OP, METHOD_REF"/>
        </module>
        <module name="NoWhitespaceBefore"/>
        <module name="NoWhitespaceBeforeCaseDefaultColon"/>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="DOT, METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="OperatorWrap">
            <property name="tokens" value="QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR, GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, TYPE_EXTENSION_AND, LITERAL_INSTANCEOF, METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="OperatorWrap">
            <property name="tokens" value="ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN, SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN"/>
            <property name="option" value="eol"/>
        </module>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT, AT, METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA, SEMI, ELLIPSIS, ARRAY_DECLARATOR, RBRACK"/>
            <property name="option" value="eol"/>
        </module>
        <module name="SingleSpaceSeparator"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Javadoc -->
        <module name="AtclauseOrder"/>
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocBlockTagLocation"/>
        <module name="JavadocContentLocation"/>
        <module name="JavadocLeadingAsteriskAlign"/>
        <module name="JavadocMethod">
            <property name="accessModifiers" value="public,protected"/>
            <property name="validateThrows" value="true"/>
        </module>
        <module name="JavadocMissingLeadingAsterisk"/>
        <module name="JavadocMissingWhitespaceAfterAsterisk"/>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true"/>
            <property name="scope" value="protected"/>
        </module>
        <module name="JavadocParagraph"/>
        <module name="JavadocTagContinuationIndentation"/>
        <module name="JavadocType">
            <property name="authorFormat" value="\S"/>
            <property name="scope" value="protected"/>
            <message key="type.tagFormat" value="Include a non-empty author (your name) for the @author tag."/>
        </module>
        <module name="JavadocType">
            <property name="versionFormat" value="^(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*$|^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$"/>
            <property name="scope" value="protected"/>
            <message key="type.tagFormat" value="Include a valid version for the @version tag. A valid version can be in two formats: simple (examples: 1, 1.2, 1.0.3, 1.3.3.1, etc.) or Semantic Versioning 2.0.0."/>
        </module>
        <module name="JavadocVariable">
            <property name="scope" value="protected"/>
        </module>
        <module name="MissingJavadocMethod"/>
        <module name="MissingJavadocType"/>
        <module name="NonEmptyAtclauseDescription"/>
        <module name="RequireEmptyLineBeforeBlockTagGroup"/>
        <module name="SingleLineJavadoc"/>
        <module name="SummaryJavadoc"/>
    </module>
</module>
